@using Rent_A_Car.BL.DTOs.Profile
@using Rent_A_Car.CORE.Enums
@model ProfileDTO

<!-- content begin -->
<div class="no-bottom no-top zebra" id="content">
	<div id="top"></div>

	<!-- section begin -->
	<section id="subheader" class="jarallax text-light">
		<img src="~/images/background/14.jpg" class="jarallax-img" alt="">
		<div class="center-y relative text-center">
			<div class="container">
				<div class="row">
					<div class="col-md-12 text-center">
						<h1>Elanlarım</h1>
					</div>
					<div class="clearfix"></div>
				</div>
			</div>
		</div>
	</section>
	<!-- section close -->

	<section id="section-settings" class="bg-gray-100">
		<div class="container">
			<div class="row">
				<div class="col-lg-3 mb30">
					<div class="card padding30 rounded-5">
						<div class="profile_avatar">
							<div style="color:limegreen" class="profile_img">
								<img src="~/img/users/admin.jpg" alt="Profile Photo">
							</div>
							<div class="profile_name">
								<h4>
									@Model.Username
									<span class="profile_username text-gray">@Model.Email</span>
								</h4>
							</div>
						</div>
						<div class="spacer-20"></div>
						<ul class="menu-col">
							<li><a asp-action="Index" asp-controller="Profile" asp-route-username="@Model.Username"><i class="fa fa-home"></i>Profil</a></li>
							<li><a asp-action="MyAdvertisement" asp-controller="Profile" asp-route-username="@Model.Username" class="active"><i class="fa fa-calendar"></i>Elanlarım</a></li>
							<li><a asp-action="FavouriteCar" asp-controller="Profile" asp-route-username="@Model.Username"><i class="fa fa-car"></i>Sevimlilər</a></li>
							<li><a asp-action="Messages" asp-controller="Profile" asp-route-username="@Model.Username"><i style="color:limegreen" class="fas fa-envelope"></i>Mesajlar</a></li>
							<li><a asp-action="Tarixce" asp-controller="Profile" asp-route-username="@Model.Username"><i style="color:limegreen" class="fas fa-clock-o"></i>Tarixçə</a></li>
							<li><a asp-action="SignOut" asp-controller="Account"><i class="fa fa-sign-out"></i>Çıxış</a></li>
						</ul>
					</div>
				</div>

				<div class="col-lg-9">
					<div class="card padding30 rounded-5">
						<h4>Elanlarım</h4>
						<div class="spacer-10"></div>
						<div id="user-balance">
							
						</div>
						@if (ViewBag.Ads != null && ViewBag.Ads.Count > 0)
						{
							@foreach (var item in ViewBag.Ads)
							{


								<div class="de-item-list no-border mb30">
									<div class="d-img">
										<img src="~/img/cars/@(item.ImageUrl)" class="img-fluid" alt="">
									</div>
									<div class="d-info">
										<div class="d-text">
											<h4>@(item.Brand.Name)  @(item.Model)</h4>
											<div class="d-atr-group">
												<ul class="d-atr">
													<li><span>Seats:</span> 4</li>
													<li><span>Luggage:</span> 2</li>
													<li><span>Doors:</span> 4</li>
													<li><span>City:</span> @(item.City)</li>
													<li><span>Fuel:</span> @(item.FuelType)</li>
													<li><span>Type:</span> @(item.Category.CategoryName)</li>
												</ul>
											</div>
										</div>
									</div>

									<div class="d-price">
										<form method="get" action="/Profile/DeleteAdvertisement">
											<input type="hidden" name="username" value="@Model.Username">
											<input type="hidden" name="adId" value="@item.Id">
											<button type="submit" class="btn-main delete-button" style="background-color:red">
												Delete
											</button>
										</form>
										<br />

										@if (!item.IsConfirmed)
										{
											<input type="hidden" name="username" value="@Model.Username">
											<input type="hidden" name="adId" value="@item.Id">
											<button type="submit" class="btn-main delete-button"
													style="background-color: #85c88a; color: white; cursor: not-allowed; opacity: 0.8; border-radius: 5px;"
													title="Elanınız admin tərəfindən təsdiqlənməlidir" disabled>
												<i class="fa fa-clock"></i> Admin tərəfindən təsdiq gözlənilir...
											</button>
											
										}







										@if (item.Status != AdvertisementStatus.VIP && item.IsConfirmed==true)
										{
											<form method="post" action="/Profile/GetVIP" onsubmit="return confirmVIP(event, this)">
												<input type="hidden" name="username" value="@Model.Username">
												<input type="hidden" name="adId" value="@item.Id">
												<button type="submit" class="btn-main vip-button" style="background-color:orange">
													<i class="fas fa-star"></i> VIP || Price: 5 AZN
												</button>
											</form>
										}

										



										<br />
										Daily rate from <span>$@(item.Price)</span>
									</div>



									<div class="clearfix"></div>
								</div>
							}
						}
						else
						{
							<h3>Elanınız Yoxdur</h3>
							<div class="menu_side_area">
								<a asp-action="Index" asp-controller="Advertisement" class="btn-main" style="background-color:orange">Elan Yerlersdir</a>
								<span id="menu-btn"></span>
							</div>
						}


					</div>


				</div>
			</div>
		</div>
	</section>


</div>
<!-- content close -->

<a href="#" id="back-to-top"></a>

@section scripts{
	<script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
	<script>
		document.addEventListener("DOMContentLoaded", function () {
			let userBalance = 0; // İstifadəçinin balansı

					async function loadUserBalance() {
			try {
				// "user-balance" elementi səhifədə varmı?
				let balanceElement = document.getElementById("user-balance");
				if (!balanceElement) {
					console.warn("Xəbərdarlıq: 'user-balance' elementi səhifədə yoxdur.");
					return; // Əgər element yoxdursa, funksiyanı dayandır
				}

				let response = await fetch("/Profile/GetUserBalance");
				let result = await response.json();

				if (response.ok) {
					userBalance = result.balance; // Balansı dəyişkənə ata
					balanceElement.innerText = ``;
				} else {
					console.error("Xəta: Server düzgün cavab qaytarmadı!", result);
					Swal.fire("Xəta", "Balans yüklənmədi: " + result.message, "error");
				}
			} catch (error) {
				console.error("Balans yüklənərkən xəta baş verdi.", error);
				Swal.fire("Xəta", "Balans yüklənərkən bağlantı xətası baş verdi!", "error");
			}
		}


			// VIP düymələrinə event əlavə et
			document.querySelectorAll(".vip-button").forEach(button => {
				button.addEventListener("click", async function (event) {
					event.preventDefault();

					// İstifadəçinin kifayət qədər balansı var mı?
					if (userBalance < 5) {
						Swal.fire({
							icon: "warning",
							title: "Balans yetərsiz!",
							text: "VIP elan etmək üçün ən az 5 AZN balansınız olmalıdır.",
							confirmButtonText: "Bağla"
						});
						return;
					}

					let form = this.closest("form"); // Formu al
					let formData = new FormData(form); // Form məlumatlarını al

					Swal.fire({
						title: "VIP elan etmək istədiyinizə əminsiniz?",
						text: "Bu əməliyyat 5 AZN tutacaq!",
						icon: "question",
						showCancelButton: true,
						confirmButtonColor: "#3085d6",
						cancelButtonColor: "#d33",
						confirmButtonText: "Bəli, davam et",
						cancelButtonText: "Xeyr, ləğv et"
					}).then(async (result) => {
						if (result.isConfirmed) {
							try {
								let response = await fetch(form.action, {
									method: "POST",
									body: formData
								});

								let result = await response.json();

								if (response.ok) {
									Swal.fire({
										icon: "success",
										title: "Uğurlu!",
										text: result.message,
										confirmButtonText: "Bağla"
									}).then(() => {
										loadUserBalance(); // Balansı yenilə
										location.reload(); // Səhifəni yenilə
									});
								} else {
									Swal.fire("Xəta!", result.message, "error");
								}
							} catch (error) {
								console.error("VIP prosesi zamanı xəta baş verdi.", error);
								Swal.fire("Xəta!", "VIP prosesi zamanı xəta baş verdi!", "error");
							}
						}
					});
				});
			});

			// Səhifə yükləndikdə istifadəçinin balansını gətir
			loadUserBalance();
		});
	</script>

	<script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
	<script>
		document.addEventListener("DOMContentLoaded", function () {
			// Silmə düymələrinə event əlavə et
			document.querySelectorAll(".delete-button").forEach(button => {
				button.addEventListener("click", async function (event) {
					event.preventDefault(); // Formun birbaşa göndərilməsinin qarşısını al

					// SweetAlert təsdiqləmə dialoqu
					Swal.fire({
						title: "Eminsiniz?",
						text: "Bu elanı silmək istədiyinizə əminsiniz?",
						icon: "warning",
						showCancelButton: true,
						confirmButtonColor: "#d33",
						cancelButtonColor: "#3085d6",
						confirmButtonText: "Bəli, sil!",
						cancelButtonText: "İmtina"
					}).then(async (result) => {
						if (result.isConfirmed) {
							let form = this.closest("form"); // Formu al
							let formData = new FormData(form); // Form məlumatlarını al

							try {
								let response = await fetch(form.action, {
									method: "POST",
									body: formData
								});

								let result = await response.json();

								if (response.ok) {
									Swal.fire({
										title: "Silindi!",
										text: result.message,
										icon: "success"
									}).then(() => {
										location.reload(); // Səhifəni yenilə
									});
								} else {
									Swal.fire("Xəta!", result.message, "error");
								}
							} catch (error) {
								console.error("Silme prosesi zamanı xəta baş verdi.", error);
								Swal.fire("Xəta!", "Silme prosesi zamanı xəta baş verdi.", "error");
							}
						}
					});
				});
			});
		});
	</script>

	
}