@using Rent_A_Car.BL.DTOs.Profile
@using Rent_A_Car.CORE.Enums
@model ProfileDTO

<!-- content begin -->
<div class="no-bottom no-top zebra" id="content">
	<div id="top"></div>

	<!-- section begin -->
	<section id="subheader" class="jarallax text-light">
		<img src="~/images/background/14.jpg" class="jarallax-img" alt="">
		<div class="center-y relative text-center">
			<div class="container">
				<div class="row">
					<div class="col-md-12 text-center">
						<h1>My Advertisements</h1>
					</div>
					<div class="clearfix"></div>
				</div>
			</div>
		</div>
	</section>
	<!-- section close -->

	<section id="section-settings" class="bg-gray-100">
		<div class="container">
			<div class="row">
				<div class="col-lg-3 mb30">
					<div class="card padding30 rounded-5">
						<div class="profile_avatar">
							<div style="color:limegreen" class="profile_img">
								@if (!string.IsNullOrEmpty(Model.ImageUrl))
								{
									<img src="~/img/users/@Model.ImageUrl" alt="Profile Photo">
								}
								else
								{
									<img src="~/images/profile/1.jpg" alt="Default Profile Photo">
								}
							</div>
							<div class="profile_name">
								<h4>
									@Model.Username
									<span class="profile_username text-gray">@Model.Email</span>
								</h4>
							</div>
						</div>
						<div class="spacer-20"></div>
						<ul class="menu-col">
							<li><a asp-action="Index" asp-controller="Profile" asp-route-username="@Model.Username"><i class="fa fa-home"></i>Dashboard</a></li>
							<li><a asp-action="MyAdvertisement" asp-controller="Profile" asp-route-username="@Model.Username" class="active"><i class="fa fa-calendar"></i>My Advertisement</a></li>
							<li><a asp-action="FavouriteCar" asp-controller="Profile" asp-route-username="@Model.Username"><i class="fa fa-car"></i>My Favorite Cars</a></li>
							<li><a asp-action="SignOut" asp-controller="Account"><i class="fa fa-sign-out"></i>Sign Out</a></li>
						</ul>
					</div>
				</div>

				<div class="col-lg-9">
					<div class="card padding30 rounded-5">
						<h4>My Advertisement</h4>
						<div class="spacer-10"></div>
						@if (ViewBag.Ads != null && ViewBag.Ads.Count > 0)
						{
							@foreach (var item in ViewBag.Ads)
							{


								<div class="de-item-list no-border mb30">
									<div class="d-img">
										<img src="~/img/cars/@(item.ImageUrl)" class="img-fluid" alt="">
									</div>
									<div class="d-info">
										<div class="d-text">
											<h4>@(item.Brand.Name)  @(item.Model)</h4>
											<div class="d-atr-group">
												<ul class="d-atr">
													<li><span>Seats:</span> 4</li>
													<li><span>Luggage:</span> 2</li>
													<li><span>Doors:</span> 4</li>
													<li><span>City:</span> @(item.City)</li>
													<li><span>Fuel:</span> @(item.FuelType)</li>
													<li><span>Type:</span> @(item.Category.CategoryName)</li>
												</ul>
											</div>
										</div>
									</div>

									<div class="d-price">
										<form method="post" action="/Profile/DeleteAdvertisement">
											<input type="hidden" name="username" value="@Model.Username">
											<input type="hidden" name="adId" value="@item.Id">
											<button type="submit" class="btn-main delete-button" style="background-color:red">
												Delete
											</button>
										</form>
										<br />

										<form method="get" action="/Profile/Update">
											<input type="hidden" name="username" value="@Model.Username">
											<input type="hidden" name="adId" value="@item.Id">
											<button type="submit" class="btn-main" style="background-color:yellowgreen">
												Edit
											</button>
										</form>

										<br />

										@if (item.Status != AdvertisementStatus.VIP)
										{
											<form method="post" action="/Profile/GetVIP">
												<input type="hidden" name="username" value="@Model.Username">
												<input type="hidden" name="adId" value="@item.Id">
												<button type="submit" class="btn-main vip-button" style="background-color:orange">
													<i class="fas fa-star"></i> VIP || Price:5AZN
												</button>
											</form>
										}


										<br />
										Daily rate from <span>$@(item.Price)</span>
									</div>



									<div class="clearfix"></div>
								</div>
							}
						}
						else
						{
							<h3>Elaniniz yoxdur Yoxdur</h3>
							<div class="menu_side_area">
								<a asp-action="Index" asp-controller="Advertisement" class="btn-main" style="background-color:orange">Elan Yerlersdir</a>
								<span id="menu-btn"></span>
							</div>
						}


					</div>


				</div>
			</div>
		</div>
	</section>


</div>
<!-- content close -->

<a href="#" id="back-to-top"></a>

@section scripts{
	<script>
						document.addEventListener("DOMContentLoaded", function () {
			let userBalance = 0; // Kullanıcının bakiyesi

			// Kullanıcı bakiyesini çek ve ekrana yaz
			async function loadUserBalance() {
				try {
					let response = await fetch("/Profile/GetUserBalance");
					let result = await response.json();

					if (response.ok) {
						userBalance = result.balance; // Bakiyeyi değişkene ata
						document.getElementById("user-balance").innerText = `Bakiye: ${userBalance} ₺`;
					} else {
						alert("Hata: " + result);
					}
				} catch (error) {
					console.error("Bakiye yüklenirken hata oluştu.", error);
				}
			}

			// VIP yapma butonlarına event ekle
			document.querySelectorAll(".vip-button").forEach(button => {
				button.addEventListener("click", async function (event) {
					event.preventDefault();

					// Kullanıcının yeterli bakiyesi var mı kontrol et
					if (userBalance < 5) {
						alert("Bakiyeniz yetersiz! VIP işlemi için en az 5₺ gereklidir.");
						return;
					}

					let form = this.closest("form"); // Formu al
					let formData = new FormData(form); // Form verilerini al

					try {
						let response = await fetch(form.action, {
							method: "POST",
							body: formData
						});

						let result = await response.json();

						if (response.ok) {
							alert(result.message);
							await loadUserBalance(); // Bakiye güncelle
							location.reload(); // Sayfayı yenile
						} else {
							alert("Hata: " + result.message);
						}
					} catch (error) {
						console.error("VIP işlemi sırasında hata oluştu.", error);
					}
				});
			});

			// Sayfa yüklendiğinde kullanıcı bakiyesini getir
			loadUserBalance();
		});


	</script>
	<script>
		document.addEventListener("DOMContentLoaded", function () {
			// Silme butonlarına tıklama eventi ekle
			document.querySelectorAll(".delete-button").forEach(button => {
				button.addEventListener("click", async function (event) {
					event.preventDefault(); // Formun direkt olarak gönderilmesini engelle

					// Kullanıcıya onay sorusu göster
					const isConfirmed = confirm("Bu ilanı silmek istediğinizden emin misiniz?");

					if (isConfirmed) {
						let form = this.closest("form"); // Formu al
						let formData = new FormData(form); // Form verilerini al

						try {
							let response = await fetch(form.action, {
								method: "POST",
								body: formData
							});

							let result = await response.json();

							if (response.ok) {
								alert(result.message); // Silme işlemi başarılı
								location.reload(); // Sayfayı yenile
							} else {
								alert("Hata: " + result.message); // Silme işlemi başarısız
							}
						} catch (error) {
							console.error("Silme işlemi sırasında hata oluştu.", error);
						}
					} else {
						// Kullanıcı iptal ettiğinde herhangi bir işlem yapma
						console.log("İlan silme işlemi iptal edildi.");
					}
				});
			});
		});
	</script>
}